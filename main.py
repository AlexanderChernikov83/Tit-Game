import math
import random
import sys
import pygame

# ----------------- –ù–ê–°–¢–†–û–ô–ö–ò -----------------
WIDTH, HEIGHT = 800, 600
FPS = 60

ROUND_TIME = 60          # —Å–µ–∫—É–Ω–¥
MAX_MISSES = 999         # –º–æ–∂–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å, –Ω–∞–ø—Ä. 30

SPAWN_START_MS = 900     # —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ—è–≤–ª–µ–Ω–∏—è –º–∏—à–µ–Ω–µ–π (–º—Å)
SPAWN_MIN_MS = 350       # –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–ø–∞–≤–Ω–∞ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ)
LEVEL_STEP_SCORE = 10    # –∫–∞–∂–¥—ã–µ N –æ—á–∫–æ–≤ –ø–æ–≤—ã—à–∞–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å

BG_COLOR = (20, 24, 28)
HUD_COLOR = (173, 216, 230)  # —Å–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π
CROSSHAIR_COLOR = (240, 240, 240)

# –°–æ–±—ã—Ç–∏–µ —Ç–∞–π–º–µ—Ä–∞ —Å–ø–∞–≤–Ω–∞
SPAWN_EVENT = pygame.USEREVENT + 1

# ----------------- –ü–û–î–ì–û–¢–û–í–ö–ê -----------------
pygame.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("–¢–∏—Ä ‚Äî Pygame")
clock = pygame.time.Clock()
font = pygame.font.SysFont("arial", 24, bold=True)
big_font = pygame.font.SysFont("arial", 42, bold=True)
pygame.mouse.set_visible(False)  # —Å–≤–æ–π –ø—Ä–∏—Ü–µ–ª ‚Äî —Å–∏—Å—Ç–µ–º–Ω—ã–π —Å–ø—Ä—è—á–µ–º


# ----------------- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–û–ï -----------------
def clamp(v, a, b):
    return max(a, min(b, v))


def draw_crosshair(surf, pos, size=16, thickness=2):
    x, y = pos
    pygame.draw.line(surf, CROSSHAIR_COLOR, (x - size, y), (x + size, y), thickness)
    pygame.draw.line(surf, CROSSHAIR_COLOR, (x, y - size), (x, y + size), thickness)
    pygame.draw.circle(surf, CROSSHAIR_COLOR, (x, y), 3, 1)


# ----------------- –ö–õ–ê–°–° –ú–ò–®–ï–ù–ò -----------------
class Target(pygame.sprite.Sprite):
    def __init__(self, speed_scale=1.0):
        super().__init__()
        # —Å–ª—É—á–∞–π–Ω—ã–π —Ä–∞–∑–º–µ—Ä (—á–µ–º –±–æ–ª—å—à–µ ‚Äî —Ç–µ–º –ª–µ–≥—á–µ –ø–æ–ø–∞—Å—Ç—å)
        self.radius = random.randint(14, 28)
        # –ø–æ–∑–∏—Ü–∏—è —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–ø–∞–≤–Ω–∏—Ç—å—Å—è —á–∞—Å—Ç–∏—á–Ω–æ –∑–∞ –∫—Ä–∞–µ–º
        self.x = random.randint(self.radius, WIDTH - self.radius)
        self.y = random.randint(self.radius, HEIGHT - self.radius)

        # —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        angle = random.uniform(0, math.tau)
        base_speed = random.uniform(1.2, 2.7) * speed_scale
        self.vx = math.cos(angle) * base_speed
        self.vy = math.sin(angle) * base_speed

        # —Ü–≤–µ—Ç ‚Äî —á—É—Ç—å —Ä–∞–Ω–¥–æ–º–∞
        base = random.choice([(255, 90, 90), (255, 190, 60), (60, 200, 255), (120, 255, 120)])
        self.color = base

        # –≤—Å–ø—ã—à–∫–∞ –ø—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏
        self.hit_flash = 0

    def update(self):
        self.x += self.vx
        self.y += self.vy

        # –æ—Ç—Å–∫–æ–∫ –æ—Ç –∫—Ä–∞—ë–≤
        if self.x - self.radius <= 0 or self.x + self.radius >= WIDTH:
            self.vx *= -1
            self.x = clamp(self.x, self.radius, WIDTH - self.radius)
        if self.y - self.radius <= 0 or self.y + self.radius >= HEIGHT:
            self.vy *= -1
            self.y = clamp(self.y, self.radius, HEIGHT - self.radius)

        if self.hit_flash > 0:
            self.hit_flash -= 1

    def draw(self, surf):
        # –≤–Ω–µ—à–Ω–µ–µ –∫–æ–ª—å—Ü–æ
        pygame.draw.circle(surf, (0, 0, 0), (int(self.x), int(self.y)), self.radius + 2)
        # –æ—Å–Ω–æ–≤–∞
        pygame.draw.circle(surf, self.color, (int(self.x), int(self.y)), self.radius)
        # –±–µ–ª–∞—è —Ç–æ—á–∫–∞-—Ü–µ–Ω—Ç—Ä
        pygame.draw.circle(surf, (245, 245, 245), (int(self.x), int(self.y)), max(3, self.radius // 4))
        # –≤—Å–ø—ã—à–∫–∞
        if self.hit_flash > 0:
            alpha = int(255 * (self.hit_flash / 8))
            flash_surface = pygame.Surface((self.radius * 4, self.radius * 4), pygame.SRCALPHA)
            pygame.draw.circle(
                flash_surface,
                (255, 255, 255, alpha),
                (self.radius * 2, self.radius * 2),
                self.radius + 6,
                4
            )
            surf.blit(flash_surface, (int(self.x) - self.radius * 2, int(self.y) - self.radius * 2))

    def is_hit(self, pos):
        px, py = pos
        return (self.x - px) ** 2 + (self.y - py) ** 2 <= self.radius ** 2


# ----------------- –ò–ì–†–û–í–û–ô –¶–ò–ö–õ -----------------
def run_game():
    # —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    targets = []
    score = 0
    shots = 0
    hits = 0
    level = 1

    spawn_interval = SPAWN_START_MS
    speed_scale = 1.0

    pygame.time.set_timer(SPAWN_EVENT, spawn_interval)
    start_ticks = pygame.time.get_ticks()
    game_over = False

    while True:
        dt = clock.tick(FPS)
        mouse_pos = pygame.mouse.get_pos()

        # --------- —Å–æ–±—ã—Ç–∏—è ---------
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

            # —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ Game Over
            if game_over and event.type == pygame.KEYDOWN:
                if event.key == pygame.K_r:
                    return  # —Ä–µ—Å—Ç–∞—Ä—Ç
                if event.key == pygame.K_ESCAPE:
                    pygame.quit()
                    sys.exit()

            if not game_over:
                if event.type == SPAWN_EVENT:
                    # —Å–ø–∞–≤–Ω–∏–º 1‚Äì2 –º–∏—à–µ–Ω–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
                    count = 1 if level < 3 else 2
                    for _ in range(count):
                        targets.append(Target(speed_scale=speed_scale))

                if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
                    shots += 1
                    hit_any = False
                    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ø–∞–¥–∞–Ω–∏–µ –ø–æ –±–ª–∏–∂–∞–π—à–µ–π —Å–≤–µ—Ä—Ö—É
                    for t in reversed(targets):
                        if t.is_hit(mouse_pos):
                            hits += 1
                            score += 1
                            t.hit_flash = 8
                            targets.remove(t)
                            hit_any = True
                            break
                    if not hit_any:
                        # –ø—Ä–æ–º–∞—Ö ‚Äî –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—É—é –º–µ—Ç—Ä–∏–∫—É
                        pass

        # --------- –ª–æ–≥–∏–∫–∞ ---------
        if not game_over:
            # –≤—Ä–µ–º—è
            elapsed_sec = (pygame.time.get_ticks() - start_ticks) / 1000
            time_left = max(0, ROUND_TIME - int(elapsed_sec))
            if time_left == 0:
                game_over = True

            # –∞–ø–¥–µ–π—Ç –º–∏—à–µ–Ω–µ–π
            for t in targets:
                t.update()

            # –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∫–∞–∂–¥—ã–µ LEVEL_STEP_SCORE –æ—á–∫–æ–≤
            new_level = score // LEVEL_STEP_SCORE + 1
            if new_level > level:
                level = new_level
                # —É—Å–∫–æ—Ä—è–µ–º —Å–ø–∞–≤–Ω –∏ —Å–∫–æ—Ä–æ—Å—Ç—å
                spawn_interval = max(SPAWN_MIN_MS, int(spawn_interval * 0.87))
                pygame.time.set_timer(SPAWN_EVENT, spawn_interval)
                speed_scale *= 1.08

        # --------- —Ä–µ–Ω–¥–µ—Ä ---------
        screen.fill(BG_COLOR)

        # —Ä–∏—Å—É–µ–º –º–∏—à–µ–Ω–∏
        for t in targets:
            t.draw(screen)

        # HUD
        acc = (hits / shots * 100) if shots > 0 else 0.0
        hud_text = f"–û—á–∫–∏: {score}   –£—Ä–æ–≤–µ–Ω—å: {level}   –í—Ä–µ–º—è: {max(0, ROUND_TIME - (pygame.time.get_ticks() - start_ticks)//1000)}   –¢–æ—á–Ω–æ—Å—Ç—å: {acc:.0f}%"
        hud_surf = font.render(hud_text, True, HUD_COLOR)
        screen.blit(hud_surf, (10, 10))

        # –ø—Ä–∏—Ü–µ–ª
        draw_crosshair(screen, mouse_pos, size=16, thickness=2)

        # —ç–∫—Ä–∞–Ω –æ–∫–æ–Ω—á–∞–Ω–∏—è
        if game_over:
            shade = pygame.Surface((WIDTH, HEIGHT), pygame.SRCALPHA)
            shade.fill((0, 0, 0, 140))
            screen.blit(shade, (0, 0))

            title = big_font.render("üéØ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!", True, HUD_COLOR)
            stats = font.render(f"–û—á–∫–∏: {score}   –í—ã—Å—Ç—Ä–µ–ª–æ–≤: {shots}   –ü–æ–ø–∞–¥–∞–Ω–∏–π: {hits}   –¢–æ—á–Ω–æ—Å—Ç—å: {acc:.1f}%", True, HUD_COLOR)
            hint = font.render("–ù–∞–∂–º–∏ R ‚Äî —Ä–µ—Å—Ç–∞—Ä—Ç, ESC ‚Äî –≤—ã—Ö–æ–¥", True, HUD_COLOR)

            screen.blit(title, (WIDTH//2 - title.get_width()//2, HEIGHT//2 - 80))
            screen.blit(stats, (WIDTH//2 - stats.get_width()//2, HEIGHT//2 - 30))
            screen.blit(hint,  (WIDTH//2 - hint.get_width()//2,  HEIGHT//2 + 15))

        pygame.display.flip()


# ----------------- –ó–ê–ü–£–°–ö -----------------
if __name__ == "__main__":
    while True:
        run_game()
